import java.lang.reflect.Type

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.1.1/samples
 * Generate a basic gradle project with  [gradle --init <Options>]
 Refer to this documentation for the various options
 * ===================================================
 * https://docs.gradle.org/current/userguide/build_init_plugin.html
 */

plugins {
    id "java"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    implementation 'com.microsoft.playwright:playwright:1.14.0'
    testImplementation 'io.cucumber:cucumber-java:6.11.0'
    testImplementation 'io.cucumber:cucumber-junit:6.11.0'

}


// Specifying Logical grouping of my projects source code
// https://docs.gradle.org/current/dsl/org.gradle.api.tasks.SourceSet.html


    sourceSets {
        main {
            java {

            }
        }
        test {
            java {

            }
        }
    }

// Set up Gradle to run with Junit
// Refer to
// https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html#org.gradle.api.tasks.testing.Test:systemProperties

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}




task cucumber() {
    dependsOn assemble, testClasses
   doLast {
       javaexec {
           main = "io.cucumber.core.cli.Main"
           classpath = files(configurations.cucumberRuntime, "src/main/learn.cucks", "src/test/learn.cucks")
           args = ['--plugin', 'pretty', '--glue', 'learn.cucks', 'src/test/resources']
       }

   }
}


test {
    failFast false
    targetCompatibility = '11'
    sourceCompatibility = '11'
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events "PASSED", "SKIPPED", "FAILED", "STANDARD_OUT", "STANDARD_ERROR"
    }
    beforeTest { descriptor ->
             logger.lifecycle("Test running => " + descriptor)
    }
// If you prefer to run test in parallel refer to and uncomment following code >>
    // 1. https://junit.org/junit5/docs/snapshot/user-guide/index.html#writing-tests-parallel-execution
    // 2. https://playwright.dev/java/docs/test-runners


//    systemProperties "junit.jupiter.execution.parallel.enabled":  true
//    systemProperties "junit.jupiter.execution.parallel.mode.default": "same_thread"
//    systemProperties "junit.jupiter.execution.parallel.mode.classes.default": "concurrent"
//     systemProperties "junit.jupiter.execution.parallel.config.strategy": "dynamic"
//     systemProperties "junit.jupiter.execution.parallel.config.dynamic.factor": 0.5


    systemProperties "webtest.url" : "http://www.example.com"
    systemProperties "webtest.pass": "!1Winner75"

    scanForTestClasses false

filter {
    //includeTestsMatching "*Web*"
}
}



